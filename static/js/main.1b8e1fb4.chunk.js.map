{"version":3,"sources":["utils/hooks.tsx","components/ChessBoard.tsx","chess/game.ts","svg/bb.svg","svg/bk.svg","svg/bn.svg","svg/bp.svg","svg/bq.svg","svg/br.svg","svg/wb.svg","svg/wk.svg","svg/wn.svg","svg/wp.svg","svg/wq.svg","svg/wr.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["svg","rankLookup","Map","fileLookup","ChessBoard","props","grid","useMemo","Array","fill","map","_","i","x","y","Math","floor","get","className","toUpperCase","file","rank","positionProps","chessGame","getPositionProperties","style","backgroundColor","onClick","onCellClick","renderedPiece","standardInitialState","Object","freeze","type","player","flattenArray","arr","concat","apply","standardRules","name","pieceType","piece","state","moveHistory","length","result","rayCast","toFile","toRank","possibleMoves","push","movedPieces","from","to","capturedPieces","penultimateRank","offsetRank","positionLookup","targetRank","targets","targetFile","offsetFile","forEach","otherPiece","validRank","otherPieceLastMove","lastMove","history","filter","target","multiRayCast","makeUnion","values","valueSet","Set","guard","value","has","unionNamespace","switchPlayer","Rank","amount","match","with","otherwise","undefined","validSpaces","nextFile","nextRank","count","rays","renderStandardPiece","WhitePawn","BlackPawn","WhiteRook","BlackRook","WhiteKnight","BlackKnight","WhiteBishop","BlackBishop","WhiteQueen","BlackQueen","WhiteKing","BlackKing","src","alt","numericFileLookup","a","b","c","d","e","f","g","h","useChessGame","game","pieces","rules","includeStandardPiecesAndRules","activePieces","p","playerTurn","allRules","analyzeNewState","clear","set","getPlayerTurn","getCapturedPieces","getPieceTypeAtPosition","getPossibleMovesAtPosition","movePiece","fromFile","fromRank","movement","find","move","splice","indexOf","undo","lastMovement","pop","beginGame","renderPiece","useCallback","useState","selectedPosition","setSelectedPosition","backgroundOverrides","setBackgroundOverrides","turnNumber","setTurnNumber","r","selectPosition","movements","underAttack","selectedPieceDestinations","primary","App","position","left","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b8e1fb4.chunk.js","sourcesContent":["import React, { useState, useMemo, useCallback } from 'react';\r\nimport { Player, File, Rank, beginGame } from '../chess/game';\r\nimport BlackBishop from '../svg/bb.svg';\r\nimport BlackKing from '../svg/bk.svg';\r\nimport BlackKnight from '../svg/bn.svg';\r\nimport BlackPawn from '../svg/bp.svg';\r\nimport BlackQueen from '../svg/bq.svg';\r\nimport BlackRook from '../svg/br.svg';\r\nimport WhiteBishop from '../svg/wb.svg';\r\nimport WhiteKing from '../svg/wk.svg';\r\nimport WhiteKnight from '../svg/wn.svg';\r\nimport WhitePawn from '../svg/wp.svg';\r\nimport WhiteQueen from '../svg/wq.svg';\r\nimport WhiteRook from '../svg/wr.svg';\r\n\r\nexport const useRenderTrigger = () => {\r\n    const [,setDummy] = useState(0);\r\n\r\n    return () => setDummy(val => val + 1);\r\n};\r\n\r\nconst standardPieceSvg: Record<string, [string, string]> = {\r\n    'pawn': [WhitePawn, BlackPawn],\r\n    'rook': [WhiteRook, BlackRook],\r\n    'knight': [WhiteKnight, BlackKnight],\r\n    'bishop': [WhiteBishop, BlackBishop],\r\n    'queen': [WhiteQueen, BlackQueen],\r\n    'king': [WhiteKing, BlackKing],\r\n};\r\n\r\nconst getPieceRenderer = (svg: Record<string, [string, string]>) =>\r\n    (type: string, player: Player) => svg[type] ? <img src={player === 'white' ? svg[type][0] : svg[type][1]} alt={`${player} ${type}`} /> : null;\r\n\r\nconst renderStandardPiece = getPieceRenderer(standardPieceSvg);\r\n\r\nconst numericFileLookup: Record<File, number> = { a: 1, b: 2, c: 3, d: 4, e: 5, f: 6, g: 7, h: 8 };\r\n\r\nexport const useChessGame: () => ChessHook = () => {\r\n    const game = useMemo(() => beginGame(), []);\r\n    const renderPiece = useCallback(renderStandardPiece, []);\r\n    const [selectedPosition, setSelectedPosition] = useState<[File, Rank]>();\r\n    const [backgroundOverrides, setBackgroundOverrides] = useState<[File, Rank, string][]>([]);\r\n    const [turnNumber, setTurnNumber] = useState(1);\r\n\r\n    const hook: ChessHook = {\r\n        getPositionProperties: (file, rank) => {\r\n            const backgroundColor = backgroundOverrides.find(([f, r]) => f === file && r === rank)?.[2] ??\r\n                ((numericFileLookup[file] + rank) % 2 === 0 ? 'brown' : 'beige');\r\n                \r\n            const piece = game.getPieceTypeAtPosition(file, rank);\r\n            const renderedPiece = piece ? renderPiece(...piece) : null\r\n            return {\r\n                backgroundColor,\r\n                renderedPiece,\r\n            };\r\n        },\r\n\r\n        selectPosition: (file, rank) => {\r\n            if (selectedPosition) {\r\n                if (game.movePiece(...selectedPosition, file, rank)) setTurnNumber(turnNumber + 1);\r\n                setSelectedPosition(undefined);\r\n                setBackgroundOverrides([]);\r\n            } else {\r\n                const piece = game.getPieceTypeAtPosition(file, rank);\r\n                if (!piece || piece[1] !== game.getPlayerTurn()) return;\r\n\r\n                const movements = game.getPossibleMovesAtPosition(file, rank);\r\n                if (movements.length === 0) return;\r\n\r\n                const underAttack: [File, Rank, string][] = [];\r\n                const selectedPieceDestinations: [File, Rank, string][] = [];\r\n\r\n                movements.forEach(movement => {\r\n                    underAttack.push(...movement.capturedPieces.map<[File, Rank, string]>(p => [p.file, p.rank, 'red']));\r\n\r\n                    const [primary] = movement.movedPieces;\r\n                    selectedPieceDestinations.push([...primary.to, 'cyan']);\r\n                });\r\n\r\n                setSelectedPosition([file, rank]);\r\n                setBackgroundOverrides([[file, rank, 'green'], ...underAttack, ...selectedPieceDestinations]);\r\n            }\r\n        },\r\n        undo: () => {\r\n            if (game.undo()) setTurnNumber(turnNumber - 1);\r\n        },\r\n        turnNumber,\r\n    };\r\n\r\n    return hook;\r\n};\r\n\r\n// export const useCustomChessGame = <TCustom extends CustomPieceType>(pieces: Record<TCustom, PieceMoveCalculator<TCustom>>, svg: Record<TCustom, [string, string]>, initialState: BoardState<StandardPieceType | TCustom>) => {\r\n//     const game = useMemo(() => withCustomPieces(pieces).beginGame(initialState), []);\r\n//     const triggerRender = useRenderTrigger();\r\n//     const renderPiece = useCallback((type: StandardPieceType | TCustom, player: Player) => {\r\n//         const renderCustomPiece = getPieceRenderer(svg);\r\n//         if (StandardPieceType.guard(type)) return renderStandardPiece(type, player);\r\n//         else return renderCustomPiece(type, player);\r\n//     }, []);\r\n\r\n//     const hook: ChessHook = {\r\n//         getPiece: useCallback((file, rank) => game.getPiece(file, rank), []),\r\n\r\n//         renderPiece: useCallback((file, rank) => {\r\n//             const piece = game.getPiece(file, rank);\r\n//             if (piece) {\r\n//                 const { type, player } = piece;\r\n//                 return renderPiece(type, player);\r\n//             } else return null;\r\n//         }, []),\r\n\r\n//         movePiece: useCallback((from, to) => {\r\n//             game.movePiece(from, to);\r\n//             triggerRender();\r\n//         }, []),\r\n\r\n//         undo: useCallback(() => {\r\n//             game.undo();\r\n//             triggerRender();\r\n//         }, []),\r\n\r\n//         pieces: game.pieces.map(({ file, rank, type, player }) => ({ file, rank, render: () => renderPiece(type, player) })),\r\n//         capturedPieces: game.capturedPieces.map(({ file, rank, type, player }) => ({ file, rank, render: () => renderPiece(type, player) })),\r\n//     };\r\n\r\n//     return hook;\r\n// };\r\n\r\nexport interface ChessHook {\r\n    getPositionProperties: (file: File, rank: Rank) => PositionProperties;\r\n    selectPosition: (file: File, rank: Rank) => void;\r\n    undo: () => void;\r\n    turnNumber: number;\r\n}\r\n\r\nexport interface PositionProperties {\r\n    backgroundColor: string;\r\n    renderedPiece: JSX.Element | null;\r\n}","import React, { useMemo } from 'react';\r\nimport { Rank, File } from '../chess/game';\r\nimport './css/ChessBoard.css';\r\nimport { ChessHook } from '../utils/hooks';\r\n\r\nconst ChessBoard: React.FC<ChessBoardProperties> = props => {\r\n    const grid = useMemo(() => Array(8 * 8).fill(0).map((_, i) => {\r\n        const x = i % 8;\r\n        const y = Math.floor(i / 8);\r\n    \r\n        return [fileLookup.get(x)!, rankLookup.get(y)!, x, y] as [File, Rank, number, number];\r\n    }), []);\r\n\r\n    return (\r\n        <div className=\"ChessBoard\">\r\n            {Array(8).fill(0).map((_,i) => <div key={`ri${i}`} className={`ChessBoard__Cell ChessBoard__RankIndicator ChessBoard__Rank${rankLookup.get(i)}`}>{rankLookup.get(i)}</div>)}\r\n            {Array(8).fill(0).map((_,i) => <div key={`fi${i}`} className={`ChessBoard__Cell ChessBoard__FileIndicator ChessBoard__File${fileLookup.get(i)?.toUpperCase()}`}>{fileLookup.get(i)}</div>)}\r\n            {grid.map(([file, rank]) => {\r\n                const positionProps = props.chessGame.getPositionProperties(file, rank);\r\n                \r\n                return (\r\n                    <div\r\n                        key={`${file}${rank}`}\r\n                        className={`ChessBoard__Cell ChessBoard__File${file.toUpperCase()} ChessBoard__Rank${rank}`}\r\n                        style={{ backgroundColor: positionProps.backgroundColor }}\r\n                        onClick={() => props.onCellClick(file, rank)}\r\n                    >\r\n                        {positionProps.renderedPiece}\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst rankLookup: Map<number, Rank> = new Map([\r\n    [0, 8],\r\n    [1, 7],\r\n    [2, 6],\r\n    [3, 5],\r\n    [4, 4],\r\n    [5, 3],\r\n    [6, 2],\r\n    [7, 1],\r\n]);\r\n\r\nconst fileLookup: Map<number, File> = new Map([\r\n    [0, 'a'],\r\n    [1, 'b'],\r\n    [2, 'c'],\r\n    [3, 'd'],\r\n    [4, 'e'],\r\n    [5, 'f'],\r\n    [6, 'g'],\r\n    [7, 'h'],\r\n]);\r\n\r\ninterface ChessBoardProperties {\r\n    onCellClick: (file: File, rank: Rank) => void;\r\n    chessGame: ChessHook;\r\n}\r\n\r\nexport default ChessBoard;","import { match } from 'ts-pattern';\r\n\r\nexport const standardInitialState: readonly GamePiece[] = Object.freeze([\r\n    { type: 'rook', file: 'a', rank: 1, player: 'white' },\r\n    { type: 'knight', file: 'b', rank: 1, player: 'white' },\r\n    { type: 'bishop', file: 'c', rank: 1, player: 'white' },\r\n    { type: 'queen', file: 'd', rank: 1, player: 'white' },\r\n    { type: 'king', file: 'e', rank: 1, player: 'white' },\r\n    { type: 'bishop', file: 'f', rank: 1, player: 'white' },\r\n    { type: 'knight', file: 'g', rank: 1, player: 'white' },\r\n    { type: 'rook', file: 'h', rank: 1, player: 'white' },\r\n    { type: 'pawn', file: 'a', rank: 2, player: 'white' },\r\n    { type: 'pawn', file: 'b', rank: 2, player: 'white' },\r\n    { type: 'pawn', file: 'c', rank: 2, player: 'white' },\r\n    { type: 'pawn', file: 'd', rank: 2, player: 'white' },\r\n    { type: 'pawn', file: 'e', rank: 2, player: 'white' },\r\n    { type: 'pawn', file: 'f', rank: 2, player: 'white' },\r\n    { type: 'pawn', file: 'g', rank: 2, player: 'white' },\r\n    { type: 'pawn', file: 'h', rank: 2, player: 'white' },\r\n    { type: 'rook', file: 'a', rank: 8, player: 'black' },\r\n    { type: 'knight', file: 'b', rank: 8, player: 'black' },\r\n    { type: 'bishop', file: 'c', rank: 8, player: 'black' },\r\n    { type: 'queen', file: 'd', rank: 8, player: 'black' },\r\n    { type: 'king', file: 'e', rank: 8, player: 'black' },\r\n    { type: 'bishop', file: 'f', rank: 8, player: 'black' },\r\n    { type: 'knight', file: 'g', rank: 8, player: 'black' },\r\n    { type: 'rook', file: 'h', rank: 8, player: 'black' },\r\n    { type: 'pawn', file: 'a', rank: 7, player: 'black' },\r\n    { type: 'pawn', file: 'b', rank: 7, player: 'black' },\r\n    { type: 'pawn', file: 'c', rank: 7, player: 'black' },\r\n    { type: 'pawn', file: 'd', rank: 7, player: 'black' },\r\n    { type: 'pawn', file: 'e', rank: 7, player: 'black' },\r\n    { type: 'pawn', file: 'f', rank: 7, player: 'black' },\r\n    { type: 'pawn', file: 'g', rank: 7, player: 'black' },\r\n    { type: 'pawn', file: 'h', rank: 7, player: 'black' },\r\n]);\r\n\r\n// TODO: Move somewhere else\r\nconst flattenArray = <T>(arr: T[][]) => ([] as T[]).concat.apply([], arr);\r\n\r\nconst standardRules: GameRule[] = [\r\n    {\r\n        name: 'Pawn Quick Start',\r\n        pieceType: 'pawn',\r\n        apply: (piece, state) => {\r\n            if (piece.moveHistory.length > 0) return;\r\n            \r\n            const result = rayCast(state, [piece.file, piece.rank], [0, piece.player === 'white' ? 1 : -1], 2);\r\n            if (result.length !== 2) return;\r\n            \r\n            const [,[toFile, toRank]] = result;\r\n\r\n            piece.possibleMoves.push({\r\n                movedPieces: [{\r\n                    piece,\r\n                    from: [piece.file, piece.rank],\r\n                    to: [toFile, toRank],\r\n                }],\r\n                capturedPieces: [],\r\n            });\r\n        },\r\n    }, {\r\n        name: 'Pawn Standard Movement',\r\n        pieceType: 'pawn',\r\n        apply: (piece, state) => {\r\n            const penultimateRank = (piece.player === 'white' ? 7 : 1);\r\n            if (piece.rank === penultimateRank) return;\r\n\r\n            const toRank = offsetRank(piece.rank, piece.player === 'white' ? 1 : -1);\r\n            const otherPiece = state.positionLookup.get(`${piece.file}${toRank}`);\r\n            if (otherPiece) return;\r\n\r\n            piece.possibleMoves.push({\r\n                movedPieces: [{\r\n                    piece,\r\n                    from: [piece.file, piece.rank],\r\n                    to: [piece.file, toRank!],\r\n                }],\r\n                capturedPieces: [],\r\n            });\r\n        },\r\n    }, {\r\n        name: 'Pawn Standard Capture',\r\n        pieceType: 'pawn',\r\n        apply: (piece, state) => {\r\n            const targetRank = offsetRank(piece.rank, piece.player === 'white' ? 1 : -1)!;\r\n            const targets: [File, Rank][] = [];\r\n            let targetFile = offsetFile(piece.file, -1);\r\n            if (targetFile) targets.push([targetFile, targetRank]);\r\n            targetFile = offsetFile(piece.file, 1);\r\n            if (targetFile) targets.push([targetFile, targetRank]);\r\n\r\n            targets.forEach(([file, rank]) => {\r\n                const otherPiece = state.positionLookup.get(`${file}${rank}`);\r\n                if (!otherPiece) return;\r\n\r\n                piece.possibleMoves.push({\r\n                    movedPieces: [{\r\n                        piece,\r\n                        from: [piece.file, piece.rank],\r\n                        to: [file, rank],\r\n                    }],\r\n                    capturedPieces: [otherPiece],\r\n                });\r\n            });\r\n        },\r\n    }, {\r\n        name: 'Pawn En Passant Capture',\r\n        pieceType: 'pawn',\r\n        apply: (piece, state) => {\r\n            const validRank = piece.player === 'white' ? 5 : 4;\r\n            if (piece.rank !== validRank) return;\r\n\r\n            const targets: [File, Rank][] = [];\r\n            let targetFile = offsetFile(piece.file, -1);\r\n            if (targetFile) targets.push([targetFile, validRank]);\r\n            targetFile = offsetFile(piece.file, 1);\r\n            if (targetFile) targets.push([targetFile, validRank]);\r\n\r\n            targets.forEach(([file, rank]) => {\r\n                const otherPiece = state.positionLookup.get(`${file}${rank}`);\r\n                if (!otherPiece || otherPiece.moveHistory.length !== 1) return;\r\n\r\n                const otherPieceLastMove = otherPiece.moveHistory[otherPiece.moveHistory.length - 1];\r\n                const lastMove = state.history[state.history.length - 1];\r\n                if (otherPieceLastMove !== lastMove || lastMove?.movedPieces[0].piece !== otherPiece) return;\r\n\r\n                piece.possibleMoves.push({\r\n                    movedPieces: [{\r\n                        piece,\r\n                        from: [piece.file, piece.rank],\r\n                        to: [file, piece.player === 'white' ? 6 : 3],\r\n                    }],\r\n                    capturedPieces: [otherPiece],\r\n                });\r\n            });\r\n        },\r\n    }, {\r\n        name: 'Knight Standard Movement',\r\n        pieceType: 'knight',\r\n        apply: (piece, state) => {\r\n            [\r\n                [offsetFile(piece.file, -1), offsetRank(piece.rank, 2)],\r\n                [offsetFile(piece.file, 1), offsetRank(piece.rank, 2)],\r\n                [offsetFile(piece.file, -2), offsetRank(piece.rank, 1)],\r\n                [offsetFile(piece.file, 2), offsetRank(piece.rank, 1)],\r\n                [offsetFile(piece.file, -2), offsetRank(piece.rank, -1)],\r\n                [offsetFile(piece.file, 2), offsetRank(piece.rank, -1)],\r\n                [offsetFile(piece.file, -1), offsetRank(piece.rank, -2)],\r\n                [offsetFile(piece.file, 1), offsetRank(piece.rank, -2)],\r\n            ]\r\n            .filter((target): target is [File, Rank] => !!target[0] && !!target[1])\r\n            .forEach(([file, rank]) => {\r\n                const otherPiece = state.positionLookup.get(`${file}${rank}`);\r\n                if (otherPiece && otherPiece.player === piece.player) return;\r\n\r\n                piece.possibleMoves.push({\r\n                    movedPieces: [{\r\n                        piece,\r\n                        from: [piece.file, piece.rank],\r\n                        to: [file, rank],\r\n                    }],\r\n                    capturedPieces: otherPiece ? [otherPiece] : [],\r\n                });\r\n            });\r\n        },\r\n    }, {\r\n        name: 'Rook Standard Movement',\r\n        pieceType: 'rook',\r\n        apply: (piece, state) => {\r\n            piece.possibleMoves.push(...multiRayCast(piece, state, [1, 0, 8], [-1, 0, 8], [0, 1, 8], [0, -1, 8]));\r\n        },\r\n    }, {\r\n        name: 'Bishop Standard Movement',\r\n        pieceType: 'bishop',\r\n        apply: (piece, state) => {\r\n            piece.possibleMoves.push(...multiRayCast(piece, state, [1, 1, 8], [-1, 1, 8], [1, -1, 8], [-1, -1, 8]));\r\n        },\r\n    }, {\r\n        name: 'Queen Standard Movement',\r\n        pieceType: 'queen',\r\n        apply: (piece, state) => {\r\n            piece.possibleMoves.push(...multiRayCast(\r\n                piece, state,\r\n                [1, 0, 8], [-1, 0, 8], [0, 1, 8], [0, -1, 8],\r\n                [1, 1, 8], [-1, 1, 8], [1, -1, 8], [-1, -1, 8],\r\n            ));\r\n        },\r\n    }, {\r\n        name: 'King Standard Movement',\r\n        pieceType: 'king',\r\n        apply: (piece, state) => {\r\n            piece.possibleMoves.push(...multiRayCast(\r\n                piece, state,\r\n                [1, 0, 1], [-1, 0, 1], [0, 1, 1], [0, -1, 1],\r\n                [1, 1, 1], [-1, 1, 1], [1, -1, 1], [-1, -1, 1],\r\n            ));\r\n        },\r\n    }, // TODO: Castling again\r\n];\r\n\r\n// // TODO: Move somewhere else\r\nconst makeUnion = <TBase>() => <TUnion extends TBase>(...values: TUnion[]) => {\r\n    Object.freeze(values);\r\n    const valueSet: Set<TBase> = new Set(values);\r\n\r\n    const guard = (value: TBase): value is TUnion => valueSet.has(value);\r\n\r\n    const unionNamespace = { guard, values };\r\n    return Object.freeze(unionNamespace as typeof unionNamespace & { type: TUnion });\r\n};\r\n\r\nexport const Player = makeUnion<string>()('white', 'black');\r\nexport type Player = typeof Player.type; // eslint-disable-line\r\nexport const switchPlayer = (player: Player): Player => player === 'white' ? 'black' : 'white';\r\n\r\nexport const Rank = makeUnion<number>()(1, 2, 3, 4, 5, 6, 7, 8);\r\nexport type Rank = typeof Rank.type; // eslint-disable-line\r\n\r\nexport const File = makeUnion<string>()('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h');\r\nexport type File = typeof File.type; // eslint-disable-line\r\n\r\nconst offsetFile = (file: File, amount: number) =>\r\n    match<[File, number], File | undefined>([file, amount])\r\n    .with(['a', 0], ['b', -1], ['c', -2], ['d', -3], ['e', -4], ['f', -5], ['g', -6], ['h', -7], () => 'a')\r\n    .with(['a', 1], ['b', 0], ['c', -1], ['d', -2], ['e', -3], ['f', -4], ['g', -5], ['h', -6], () => 'b')\r\n    .with(['a', 2], ['b', 1], ['c', 0], ['d', -1], ['e', -2], ['f', -3], ['g', -4], ['h', -5], () => 'c')\r\n    .with(['a', 3], ['b', 2], ['c', 1], ['d', 0], ['e', -1], ['f', -2], ['g', -3], ['h', -4], () => 'd')\r\n    .with(['a', 4], ['b', 3], ['c', 2], ['d', 1], ['e', 0], ['f', -1], ['g', -2], ['h', -3], () => 'e')\r\n    .with(['a', 5], ['b', 4], ['c', 3], ['d', 2], ['e', 1], ['f', 0], ['g', -1], ['h', -2], () => 'f')\r\n    .with(['a', 6], ['b', 5], ['c', 4], ['d', 3], ['e', 2], ['f', 1], ['g', 0], ['h', -1], () => 'g')\r\n    .with(['a', 7], ['b', 6], ['c', 5], ['d', 4], ['e', 3], ['f', 2], ['g', 1], ['h', 0], () => 'h')\r\n    .otherwise(() => undefined);\r\n\r\nconst offsetRank = (rank: Rank, amount: number) =>\r\n    Rank.guard(rank + amount) ? rank + amount as Rank : undefined;\r\n\r\nconst RayCastDirection = makeUnion<number>()(-1, 0, 1);\r\ntype RayCastDirection = typeof RayCastDirection.type; // eslint-disable-line\r\n\r\nexport interface GameState {\r\n    activePieces: ActiveGamePiece[];\r\n    capturedPieces: ActiveGamePiece[];\r\n    positionLookup: Map<string, ActiveGamePiece>;\r\n    history: PieceMovement[];\r\n    playerTurn: Player;\r\n}\r\n\r\nexport interface SubPieceMovement {\r\n    piece: ActiveGamePiece;\r\n    from: readonly [File, Rank];\r\n    to: readonly [File, Rank];\r\n}\r\n\r\nexport interface PieceMovement {\r\n    movedPieces: SubPieceMovement[];\r\n    capturedPieces: ActiveGamePiece[];\r\n}\r\n\r\n// TODO: Make another one of these that is more general to affect the whole game?\r\n// Like, to activate the check state. They can run after all piece rules\r\n// and can modify the possible moves further. I think I will try that, but\r\n// I want to get the pieces moving normally first again.\r\nexport interface GameRule {\r\n    name: string;\r\n    pieceType: string;\r\n    apply: (piece: ActiveGamePiece, state: GameState) => void;\r\n}\r\n\r\nexport const beginGame = (pieces?: GamePiece[], rules?: GameRule[], includeStandardPiecesAndRules = true) => {\r\n    const state: GameState = {\r\n        activePieces: (includeStandardPiecesAndRules ? standardInitialState : []).concat(pieces ?? []).map(p => ({ ...p, possibleMoves: [], moveHistory: [] })),\r\n        capturedPieces: [],\r\n        positionLookup: new Map<string, ActiveGamePiece>(),\r\n        history: [],\r\n        playerTurn: 'white',\r\n    };\r\n\r\n    const allRules = Object.freeze((includeStandardPiecesAndRules ? standardRules : []).concat(rules ?? []));\r\n\r\n    const analyzeNewState = () => {\r\n        state.positionLookup.clear();\r\n        state.activePieces.forEach(piece => {\r\n            state.positionLookup.set(`${piece.file}${piece.rank}`, piece);\r\n            piece.possibleMoves = [];\r\n        });\r\n\r\n        allRules.forEach(({ pieceType, apply }) => state.activePieces.filter(p => p.type === pieceType).forEach(piece => apply(piece, state)));\r\n    };\r\n\r\n    analyzeNewState();\r\n\r\n    const game: ChessGame = {\r\n        // state\r\n        getPlayerTurn: () => state.playerTurn,\r\n        getCapturedPieces: () => Object.freeze([...state.capturedPieces]),\r\n        getPieceTypeAtPosition: (file, rank) => {\r\n            const piece = state.positionLookup.get(`${file}${rank}`);\r\n\r\n            return piece && [piece.type, piece.player];\r\n        },\r\n        getPossibleMovesAtPosition: (file, rank) => {\r\n            const piece = state.positionLookup.get(`${file}${rank}`);\r\n            if (!piece || piece.player !== state.playerTurn) return [];\r\n            return Object.freeze([...piece.possibleMoves]);\r\n        },\r\n        movePiece: (fromFile, fromRank, toFile, toRank) => {\r\n            const piece = state.positionLookup.get(`${fromFile}${fromRank}`);\r\n            if (!piece) return false;\r\n\r\n            const movement = piece.possibleMoves.find(move => move.movedPieces[0].piece === piece && move.movedPieces[0].to[0] === toFile && move.movedPieces[0].to[1] === toRank);\r\n            if (!movement) return false;\r\n\r\n            movement.movedPieces.forEach(({ piece, to: [file, rank]}) => {\r\n                piece.file = file;\r\n                piece.rank = rank;\r\n            });\r\n\r\n            movement.capturedPieces.forEach(piece => {\r\n                state.activePieces.splice(state.activePieces.indexOf(piece), 1);\r\n                state.capturedPieces.push(piece);\r\n            });\r\n\r\n            state.history.push(movement);\r\n            piece.moveHistory.push(movement);\r\n            state.playerTurn = switchPlayer(state.playerTurn);\r\n\r\n            analyzeNewState();\r\n            return true;\r\n        },\r\n        undo: () => {\r\n            const lastMovement = state.history.pop();\r\n            if (!lastMovement) return false;\r\n\r\n            lastMovement.capturedPieces.forEach(piece => {\r\n                state.capturedPieces.splice(state.capturedPieces.indexOf(piece), 1);\r\n                state.activePieces.push(piece);\r\n            });\r\n\r\n            lastMovement.movedPieces.forEach(({ piece, from: [file, rank] }, i) => {\r\n                if (i === 0) piece.moveHistory.pop();\r\n                piece.file = file;\r\n                piece.rank = rank;\r\n            });\r\n\r\n            state.playerTurn = switchPlayer(state.playerTurn);\r\n\r\n            analyzeNewState();\r\n            return true;\r\n        },\r\n    };\r\n\r\n    return game;\r\n};\r\n\r\nexport interface GamePiece {\r\n    type: string;\r\n    file: File;\r\n    rank: Rank;\r\n    player: Player;\r\n}\r\n\r\nexport interface ActiveGamePiece extends GamePiece {\r\n    possibleMoves: PieceMovement[];\r\n    moveHistory: PieceMovement[];\r\n}\r\n\r\nexport interface ChessGame {\r\n    getPlayerTurn: () => Player;\r\n    getCapturedPieces: () => readonly GamePiece[];\r\n    getPieceTypeAtPosition: (file: File, rank: Rank) => [string, Player] | undefined;\r\n    getPossibleMovesAtPosition: (file: File, rank: Rank) => readonly PieceMovement[];\r\n    movePiece: (fromFile: File, fromRank: Rank, toFile: File, toRank: Rank) => boolean;\r\n    undo: () => boolean;\r\n}\r\n\r\nconst rayCast = (state: GameState, [file, rank]: [File, Rank], [x, y]: [RayCastDirection, RayCastDirection], length?: number) => {\r\n    length = length ?? 8;\r\n    const validSpaces: [File, Rank, ActiveGamePiece | undefined][] = [];\r\n\r\n    let nextFile = offsetFile(file, x);\r\n    let nextRank = offsetRank(rank, y);\r\n    let piece = state.positionLookup.get(`${nextFile}${nextRank}`);\r\n    let count = 0;\r\n    while (nextFile && nextRank && count < length) {\r\n        validSpaces.push([nextFile, nextRank, piece]);\r\n        if (piece) break;\r\n\r\n        nextFile = offsetFile(nextFile, x);\r\n        nextRank = offsetRank(nextRank, y);\r\n        piece = state.positionLookup.get(`${nextFile}${nextRank}`);\r\n        count++;\r\n    }\r\n\r\n    return validSpaces;\r\n};\r\n\r\nconst multiRayCast = (piece: ActiveGamePiece, state: GameState, ...rays: [RayCastDirection, RayCastDirection, number | undefined][]) =>\r\n    flattenArray(rays.map(([x, y, length]) =>\r\n        rayCast(state, [piece.file, piece.rank], [x, y], length)\r\n        .map<PieceMovement | undefined>(([file, rank, otherPiece]) => {\r\n            if (otherPiece?.player === piece.player) return undefined;\r\n\r\n            return {\r\n                movedPieces: [{ from: [piece.file, piece.rank], to: [file, rank], piece }],\r\n                capturedPieces: otherPiece ? [otherPiece] : [],\r\n            };\r\n        })\r\n        .filter((result): result is PieceMovement => typeof result !== 'undefined')));","export default __webpack_public_path__ + \"static/media/bb.629fc057.svg\";","export default __webpack_public_path__ + \"static/media/bk.6c8cc8fa.svg\";","export default __webpack_public_path__ + \"static/media/bn.d714eeb4.svg\";","export default __webpack_public_path__ + \"static/media/bp.be5d44ca.svg\";","export default __webpack_public_path__ + \"static/media/bq.cf388bf4.svg\";","export default __webpack_public_path__ + \"static/media/br.fd4e01f5.svg\";","export default __webpack_public_path__ + \"static/media/wb.8333f40f.svg\";","export default __webpack_public_path__ + \"static/media/wk.3f959aab.svg\";","export default __webpack_public_path__ + \"static/media/wn.145b8796.svg\";","export default __webpack_public_path__ + \"static/media/wp.50273cc6.svg\";","export default __webpack_public_path__ + \"static/media/wq.7a1aecff.svg\";","export default __webpack_public_path__ + \"static/media/wr.ba9ac487.svg\";","import React from 'react';\nimport './App.css';\nimport ChessBoard from './components/ChessBoard';\nimport { useChessGame } from './utils/hooks';\n\nconst App = () => {\n    const chessGame = useChessGame();\n\n    return (\n        <div className=\"App\">\n            <div className=\"ChessBoardContainer\">\n                <ChessBoard\n                    onCellClick={chessGame.selectPosition}\n                    chessGame={chessGame}\n                />\n            </div>\n            <button\n                style={{ position: 'absolute', left: '0px' }}\n                onClick={chessGame.undo}\n            >Undo</button>\n        </div>\n    );\n};\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}